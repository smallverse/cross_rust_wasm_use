declare namespace wasm_bindgen {
	/* tslint:disable */
	/* eslint-disable */
	/**
	*/
	export function greet(): void;
	/**
	* @param {number} left
	* @param {number} right
	* @returns {number}
	*/
	export function add(left: number, right: number): number;
	/**
	* @param {number} x
	* @param {number} y
	* @param {number} z
	* @param {number} w
	* @returns {PubQuaternion}
	*/
	export function gen_quaternion(x: number, y: number, z: number, w: number): PubQuaternion;
	/**
	* @param {number} x
	* @param {number} y
	* @param {number} z
	* @param {number} w
	* @returns {string}
	*/
	export function gen_quaternion_str(x: number, y: number, z: number, w: number): string;
	/**
	* @param {string} name
	* @param {number} age
	* @param {string} desc
	* @returns {string}
	*/
	export function gen_obj_info_str(name: string, age: number, desc: string): string;
	/**
	*/
	export class PubQuaternion {
	  free(): void;
	/**
	*/
	  w: number;
	/**
	*/
	  x: number;
	/**
	*/
	  y: number;
	/**
	*/
	  z: number;
	}
	
}

declare type InitInput = RequestInfo | URL | Response | BufferSource | WebAssembly.Module;

declare interface InitOutput {
  readonly memory: WebAssembly.Memory;
  readonly __wbg_pubquaternion_free: (a: number) => void;
  readonly __wbg_get_pubquaternion_x: (a: number) => number;
  readonly __wbg_set_pubquaternion_x: (a: number, b: number) => void;
  readonly __wbg_get_pubquaternion_y: (a: number) => number;
  readonly __wbg_set_pubquaternion_y: (a: number, b: number) => void;
  readonly __wbg_get_pubquaternion_z: (a: number) => number;
  readonly __wbg_set_pubquaternion_z: (a: number, b: number) => void;
  readonly __wbg_get_pubquaternion_w: (a: number) => number;
  readonly __wbg_set_pubquaternion_w: (a: number, b: number) => void;
  readonly gen_quaternion: (a: number, b: number, c: number, d: number) => number;
  readonly gen_quaternion_str: (a: number, b: number, c: number, d: number, e: number) => void;
  readonly gen_obj_info_str: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
  readonly greet: () => void;
  readonly add: (a: number, b: number) => number;
  readonly __wbindgen_add_to_stack_pointer: (a: number) => number;
  readonly __wbindgen_free: (a: number, b: number) => void;
  readonly __wbindgen_malloc: (a: number) => number;
  readonly __wbindgen_realloc: (a: number, b: number, c: number) => number;
}

/**
* If `module_or_path` is {RequestInfo} or {URL}, makes a request and
* for everything else, calls `WebAssembly.instantiate` directly.
*
* @param {InitInput | Promise<InitInput>} module_or_path
*
* @returns {Promise<InitOutput>}
*/
declare function wasm_bindgen (module_or_path?: InitInput | Promise<InitInput>): Promise<InitOutput>;
